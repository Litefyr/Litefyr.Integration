prototype(Litefyr.Integration:Component.Links) < prototype(Neos.Fusion:Component) {
    links = ${q(node).property('links') || []}
    linkInBackend = true
    fallbackContent = ${Translation.translate('more', null, [], null, 'Litefyr.Presentation')}

    class = null

    wrapperClass = 'flex flex-wrap items-center gap-x-6 gap-y-3'

    @private.items = Neos.Fusion:Map {
        items = ${Array.filter(props.links)}
        itemRenderer = afx`
            <Litefyr.Integration:Component.Links.Item
                {...item}
                fallbackContent={props.fallbackContent}
                break={item.break && !iterator.isLast}
            />
        `
        itemRenderer.@process.convertUris = Neos.Neos:ConvertUris {
            @if.set = ${props.linkInBackend}
            forceConversion = true
        }
        @process.filter = ${Array.filter(value)}
    }

    renderer = afx`
        <div @if={Carbon.Array.check(private.items)} class={Carbon.String.classNames(props.wrapperClass, props.class)} x-data x-tooltips>
            {Array.join(private.items, '')}
        </div>
    `
}
