prototype(Litefyr.Integration:Content.Image) < prototype(Neos.Neos:ContentComponent) {
    image = ${q(node).property('image')}
    alternativeText = ${q(node).property('alternativeText')}
    lightbox = ${q(node).property('lightbox')}
    lightboxCaption = ${q(node).property('caption')}
    link = ${q(node).property('link')}
    breakout = ${this.inSlider ? null : q(node).property('breakout')}
    enableSpacing = ${!this.inSlider}

    class = ${null}

    // For text / image combi
    enableText = ${q(node).property('enableText')}
    theme = ${q(node).property('theme')}
    leftColSize = ${q(node).property('leftColSize')}
    textLeft = ${q(node).property('textLeft')}
    links = Litefyr.Integration:Component.Links
    headline = Neos.Neos:Editable {
        property = 'headline'
        block = false
    }
    label = Neos.Neos:Editable {
        property = 'label'
        block = false
    }
    text = Neos.Neos:Editable {
        property = 'text'
    }
    textBoxText = Neos.Neos:Editable {
        property = 'textBoxText'
        block = false
    }

    rounded = ${this.inSlider ? false : true}
    inBackend = ${node.context.inBackend}
    screenHeight = ${q(node).property('screenHeight')}

    textBoxDirection = ${q(node).property('textBoxDirection')}
    textBoxMaxWidth = ${q(node).property('textBoxMaxWidth')}
    textBoxBreakpoint = ${q(node).property('textBoxBreakpoint')}

    renderer = Litefyr.Presentation:Block.ImageCombinations {
        @apply.props = ${props}
    }
}
